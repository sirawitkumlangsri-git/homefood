{"version":3,"file":"island-renderer-CEGXbfZT.js","sources":["../../../../virtual:nuxt:/Users/sirawitkumlungsri/Documents/GitHub/homefood/.nuxt/components.islands.mjs","../../../../node_modules/nuxt/dist/app/components/island-renderer.js"],"sourcesContent":["import { defineAsyncComponent } from 'vue'\nexport const islandComponents = import.meta.client ? {} : {\n\n}","import { createVNode, defineComponent, onErrorCaptured } from \"vue\";\nimport { injectHead } from \"@unhead/vue\";\nimport { createError } from \"../composables/error.js\";\nimport { islandComponents } from \"#build/components.islands.mjs\";\nexport default defineComponent({\n  name: \"IslandRenderer\",\n  props: {\n    context: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const head = injectHead();\n    head.headEntries().splice(0, head.headEntries().length);\n    const component = islandComponents[props.context.name];\n    if (!component) {\n      throw createError({\n        statusCode: 404,\n        statusMessage: `Island component not found: ${props.context.name}`\n      });\n    }\n    onErrorCaptured((e) => {\n      console.log(e);\n    });\n    return () => createVNode(component || \"span\", { ...props.context.props, \"data-island-uid\": \"\" });\n  }\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACO,MAAM,mBAA6C,CAE1D;ACCA,MAAA,iBAAe,gBAAgB;AAAA,EAC7B,MAAM;AAAA,EACN,OAAO;AAAA,IACL,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IAChB;AAAA,EACG;AAAA,EACD,MAAM,OAAO;AACX,UAAM,OAAO,WAAY;AACzB,SAAK,YAAW,EAAG,OAAO,GAAG,KAAK,YAAa,EAAC,MAAM;AACtD,UAAM,YAAY,iBAAiB,MAAM,QAAQ,IAAI;AACrD,QAAI,CAAC,WAAW;AACd,YAAM,YAAY;AAAA,QAChB,YAAY;AAAA,QACZ,eAAe,+BAA+B,MAAM,QAAQ,IAAI;AAAA,MACxE,CAAO;AAAA,IACP;AACI,oBAAgB,CAAC,MAAM;AACrB,cAAQ,IAAI,CAAC;AAAA,IACnB,CAAK;AACD,WAAO,MAAM,YAAY,aAAa,QAAQ,EAAE,GAAG,MAAM,QAAQ,OAAO,mBAAmB,IAAI;AAAA,EACnG;AACA,CAAC;","x_google_ignoreList":[0,1]}